{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/message.service.ts","./src/environments/environment.ts","./src/main.ts","ws (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\nimport { MessageService } from './message.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'chat-app';\n  message= '';\n  chats = [\n    'Lorem ipsum dolor sit',\n    'amet consectetur',\n    'adipisicing elit. Qui voluptate',\n    'culpa nemo doloribus',\n    'numquam autem',\n    'atque sapiente aliquam',\n    'in quas tenetur',\n    'hic perspiciatis',\n    'omnis magni vitae itaque harum',\n    'nulla nisi?'];\n    constructor(private messageService: MessageService){\n      \n    }\n    addChat(){\n      if (this.message.length === 0){\n        return;\n      }\n      this.chats.push(this.message);\n      this.message = '';\n      window.setInterval(() => {\n        const elem = document.getElementById('scrolldiv')\n        elem.scrollTop = elem.scrollHeight;\n      }, 500);\n    }\n}\n","<div class=\"container\">\n  <div class=\"topbar\">{{title}}</div>\n  <div class=\"chatarea\">\n    <div style=\"min-height: 0; overflow: scroll\" id=\"scrolldiv\">\n    <div *ngFor=\"let chat of chats; let i = index\" class=\"chat\" [class.me]=\"i % 3\"><p>{{chat}}</p></div>\n    </div>\n  </div>\n  <div class=\"inputarea\">\n    <form (submit)=\"addChat()\">\n        <input class=\"textbox\" name=\"message\" [(ngModel)]=\"message\" type=\"text\">\n        <button type=\"submit\" class=\"sendbutton\">Send</button>\n    </form>\n  </div>\n</div> \n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms'\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\r\nimport * as io from 'socket.io-client';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MessageService {\r\n  socket;\r\n  constructor() {\r\n    this.socket = io.connect();\r\n    this.socket.on('connect', () => {\r\n      console.log('connected to the server');\r\n    });\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"],"sourceRoot":"webpack:///"}